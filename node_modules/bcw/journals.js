#!/usr/bin/env node
const { printAlert, clearScreen, colors, printInfo, printSuccess, printBanner, printFSLogo, printSECLogo } = require("./console-utils");
const { setupGit, initializeProject, writeLog, getOrSetGitUser } = require("./utils");
let { execSync } = require("child_process");
const inquirer = require("inquirer");
const CURR_DIR = process.cwd();

let projectName = "fs-journal";
let journals = {
  'Fullstack': 'fs-journal',
  'Cyber Security': 'sec-journal'
}

async function create() {
  try {
    // @ts-ignore
    const answers = await inquirer.prompt({
      name: "project-choice",
      type: "list",
      message: "Which course are you taking?",
      choices: ['Fullstack', 'Cyber Security']
    })

    projectName = journals[answers["project-choice"]]

    let gitUser = await getOrSetGitUser()
    if (!gitUser) {
      gitUser = await setupGit()
    }
    const { fullname, ghname, ghemail } = gitUser
    clearScreen();
    console.group(colors.FgMagenta, "---INITIALIZING PROJECT---");
    printInfo(`--------------------\n[+] CREATING PROJECT\n[+] ${projectName}`);

    let projPath = `${CURR_DIR}/${projectName}`;
    execSync(`npx create-project ${projectName} codeworks-templates/${projectName}#main --ghname="${ghname}" --ghemail="${ghemail}" --fullname="${fullname}"`);
    process.chdir(projPath);

    writeLog(`${CURR_DIR}\\${projectName}`, projectName)

    await initializeProject(projectName);
    console.groupEnd()
    projectName.includes('fs')
      ? printFSLogo()
      : printSECLogo()
    printSuccess("[+] Journal created successfully to get started");
    printSuccess("[+] Here you will be completing daily reflections");
    printSuccess("[+] Taking notes, completing weekly quizzes");
    printSuccess("[+] And more!");
    printSuccess("[+] Happy Journaling!");
    printSuccess(`[~] cd ${projectName}`);
    console.groupEnd();
  } catch (e) {
    printAlert(`[!] ${e.message}`, e);
  }
}

async function start() {
  try {
    await create()
  } catch (e) {
    console.error(e)
  }
}

start()
