#!/usr/bin/env node
let checkUpdate = require("./check-update")
let inquirer = require("inquirer")
const { printAlert, clearScreen, colors, printWarning, printInfo, printSuccess } = require("./console-utils")
let { execSync, exec } = require("child_process")
const fse = require('fs-extra')
const path = require("path")
const { unpack } = require("./lib/unpack")
const https = require('https')

const templates = [
  "js-tests"
]
const CURR_DIR = process.cwd()

//prompts and the name of properties added to the answers object
const prompts = [
  {
    name: "package-choice",
    type: "list",
    message: "What Package would you like to add?",
    choices: templates
  }
]


async function create() {
  try {
    // REVIEW
    if (process.argv) {
      process.argv.find((a, i) => {
        if (a.includes("legal")) {
          addLegal()
        }
      })
      return
    }
  } catch (error) {
    console.error(error)
    return
  }



  // @ts-ignore
  const answers = await inquirer.prompt(prompts)
  let package = answers["package-choice"]

  try {
    clearScreen()
    console.group(colors.FgMagenta, "---ADDING PACKAGE---")
    execSync(`npx create-project .package-template codeworks-templates/${package}`)
    const templatePackage =
      fse.existsSync(path.join(CURR_DIR, '.package-template/src/package.json'))
        ? require(path.join(CURR_DIR, '.package-template/src/package.json'))
        : null

    const localPackage = fse.existsSync(path.join(CURR_DIR, 'package.json'))
      ? require(path.join(CURR_DIR, 'package.json'))
      : null

    if (localPackage && templatePackage) {
      console.log('[~] ...unpacking...')
      unpack(CURR_DIR, localPackage, templatePackage)
    }

    fse.copySync(path.join(CURR_DIR, '.package-template/src'), CURR_DIR)
    fse.rmdirSync(path.join(CURR_DIR, '.package-template'), { recursive: true })

    printSuccess("[+] Package Added")
    console.groupEnd()
  } catch (e) {
    printAlert(`[!] ${e.message}`, e)
  }
}


async function addLegal() {
  try {
    printInfo("---ADDING LEGAL README---")
    const text = await getUrl('https://raw.githubusercontent.com/codeworks-templates/legal/master/legal.md')
    fse.appendFileSync(path.join(CURR_DIR, 'README.md'), ('\n\n' + text))
    printSuccess('---COMPLETE---')
  } catch (error) {
    printAlert('[ADD_LEGAL]', error)
  }
}


function getUrl(url) {
  return new Promise((resolve, reject) => {
    https.get(url, {
      headers: {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36"
      }
    }, (res) => {
      let data = ''
      res.on('data', (chunk) => {
        data += chunk
      })
      res.on('end', () => {
        resolve(data)
      })
    }).on('error', (e) => {
      reject(e)
    })
  })
}


async function start() {
  try {
    await checkUpdate()
  } catch (e) {
    console.error(e)
  }
  try {
    await create()
  } catch (e) {
    console.error(e)
  }
}

start()




